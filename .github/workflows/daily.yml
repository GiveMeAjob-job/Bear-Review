name: Daily Review

on:
  schedule:
    - cron: '0 4 * * *'          # UTC 时间
  workflow_dispatch:
    inputs:
      dry_run:
        description: '试运行（不发送通知）'
        type: boolean
        default: false
      verbose:
        description: '详细日志'
        type: boolean
        default: false

jobs:
  daily-review:
    runs-on: ubuntu-latest
    timeout-minutes: 15            # ⬆︎ 可拉长一点

    steps:
      # 1️⃣ 取代码
      - uses: actions/checkout@v4

      # 2️⃣ Python + pip cache
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip

      # 3️⃣ 安装依赖
      - run: pip install -r requirements.txt

      # 4️⃣ （可选）打印关键 env，手动排错时有用
      - name: Debug env
        run: |
          echo "NOTION_DB_ID=$NOTION_DB_ID"
          echo "TOK_LEN=${#NOTION_TOKEN}"
          echo "TELEGRAM_CHAT_ID is set: ${{ secrets.TELEGRAM_CHAT_ID != '' }}"
          echo "TELEGRAM_CHAT_ID_2 is set: ${{ secrets.TELEGRAM_CHAT_ID_2 != '' }}"

      # 5️⃣ 执行脚本
      - name: Run daily summary
        env:
          NOTION_TOKEN:       ${{ secrets.NOTION_TOKEN }}
          NOTION_DB_ID:       ${{ secrets.NOTION_DB_ID }}
          DEEPSEEK_KEY:       ${{ secrets.DEEPSEEK_KEY }}
          OPENAI_KEY:         ${{ secrets.OPENAI_KEY }}
          LLM_PROVIDER:       ${{ secrets.LLM_PROVIDER }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_CHAT_ID_2: ${{ secrets.TELEGRAM_CHAT_ID_2 }}  # 添加第二个账号
          EMAIL_SMTP_SERVER:  ${{ secrets.EMAIL_SMTP_SERVER }}
          EMAIL_USERNAME:     ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD:     ${{ secrets.EMAIL_PASSWORD }}
          TIMEZONE:           ${{ secrets.TIMEZONE }}
        run: |
          python -m src.main \
            --period daily \
            ${{ github.event.inputs.dry_run == 'true' && '--dry-run' || '' }} \
            ${{ github.event.inputs.verbose == 'true' && '--verbose' || '' }}}}